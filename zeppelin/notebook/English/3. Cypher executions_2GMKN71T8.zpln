{
  "paragraphs": [
    {
      "text": "%md\n\n# Cypher Execution\n\nThe Apoc library comes with many procedure to help us to execute specific Cypher statements. here are some of them: \n\n\n- `apoc.cypher.run(fragment, $params)` - executes a reading fragment with the given parameters\n- `apoc.cypher.doIt(fragment, $params)` - executes writing fragment\n- `apoc.cypher.runFile(file or url, $params)` - runs each statement in the file, all semicolon separated - currently no schema operations\n- `apoc.cypher.runSchema(statement, $params)` yield value - executes query schema statement\n- `apoc.cypher.runSchemaFile(file or url, $params)` - allows only schema operations, runs each schema statement in the file, all semicolon separated\n- `apoc.cypher.runTimeboxed(\u0027fragment\u0027,$params, timeout)` - abort transaction after `timeout` and return results\n\nSee \u003ca href\u003d\"https://neo4j.com/labs/apoc/4.1/cypher-execution/\" target\u003d\"_blank\"\u003ehere\u003c/a\u003e to complete list.\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-17 21:20:42.324",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch1\u003eCypher Execution\u003c/h1\u003e\n\u003cp\u003eThe Apoc library comes with many procedure to help us to execute specific Cypher statements. here are some of them:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eapoc.cypher.run(fragment, $params)\u003c/code\u003e - executes a reading fragment with the given parameters\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eapoc.cypher.doIt(fragment, $params)\u003c/code\u003e - executes writing fragment\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eapoc.cypher.runFile(file or url, $params)\u003c/code\u003e - runs each statement in the file, all semicolon separated - currently no schema operations\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eapoc.cypher.runSchema(statement, $params)\u003c/code\u003e yield value - executes query schema statement\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eapoc.cypher.runSchemaFile(file or url, $params)\u003c/code\u003e - allows only schema operations, runs each schema statement in the file, all semicolon separated\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eapoc.cypher.runTimeboxed(\u0027fragment\u0027,$params, timeout)\u003c/code\u003e - abort transaction after \u003ccode\u003etimeout\u003c/code\u003e and return results\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSee \u003ca href\u003d\"https://neo4j.com/labs/apoc/4.1/cypher-execution/\" target\u003d\"_blank\"\u003ehere\u003c/a\u003e to complete list.\u003c/p\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635854661682_1970406879",
      "id": "paragraph_1635854661682_1970406879",
      "dateCreated": "2021-11-02 12:04:21.682",
      "dateStarted": "2021-11-17 21:20:42.325",
      "dateFinished": "2021-11-17 21:20:42.499",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\n### apoc.cypher.run\n\nTo retrieve count of nodes for each labels we could do something like:\n\u003cpre\u003e\nMATCH (:Person) RETURN count(*)\nUNION ALL\nMATCH (:Movie) RETURN count(*)\nUNION ALL\n...\n\u003c/pre\u003e\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-17 21:20:44.893",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eapoc.cypher.run\u003c/h3\u003e\n\u003cp\u003eTo retrieve count of nodes for each labels we could do something like:\u003c/p\u003e\n\u003cpre\u003e\nMATCH (:Person) RETURN count(*)\nUNION ALL\nMATCH (:Movie) RETURN count(*)\nUNION ALL\n...\n\u003c/pre\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635858459697_1303077886",
      "id": "paragraph_1635858459697_1303077886",
      "dateCreated": "2021-11-02 13:07:39.697",
      "dateStarted": "2021-11-17 21:20:44.894",
      "dateFinished": "2021-11-17 21:20:44.910",
      "status": "FINISHED"
    },
    {
      "title": "Example",
      "text": "%neo4j\n\nCALL db.labels() yield label\n// we can concatenate string and variables (label)\n// otherwise, with pure cypher it would be `match (:label) ...` (doesn\u0027t work) because it would searching for nodes with label `:label`\nCALL apoc.cypher.run(\"match (:`\"+label+\"`) return count(*) as count\", null) yield value\nreturn label, value.count as count",
      "user": "anonymous",
      "dateUpdated": "2021-11-18 10:41:33.737",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 195.994,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "label": "string",
                      "count": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined",
        "title": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "label\tcount\n\"Movie\"\t39\n\"Person\"\t133\n\"NotKeanu\"\t132\n\"MyCaseNode\"\t3\n\"NodePeriodic\"\t9999\n\"End\"\t9999\n\"Start\"\t1000\n\"Batch\"\t100\n\"Alert\"\t2\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635858066468_27777609",
      "id": "paragraph_1635858066468_27777609",
      "dateCreated": "2021-11-02 13:01:06.468",
      "dateStarted": "2021-11-18 10:41:31.950",
      "dateFinished": "2021-11-18 10:41:31.975",
      "status": "FINISHED"
    },
    {
      "title": "apoc.cypher.runFile",
      "text": "%neo4j\n\n// I have a file `fileExample.cypher` with this content:\n// CREATE (n:Node {id:1});\n// MATCH (n:Node) SET n.import \u003d true;\n\n\nCALL apoc.cypher.runFile(\"fileExample.cypher\");",
      "user": "anonymous",
      "dateUpdated": "2021-11-18 10:42:07.141",
      "config": {
        "colWidth": 6.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 184.006,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "row": "string",
                      "result.constraintsRemoved": "string",
                      "result.indexesRemoved": "string",
                      "result.nodesCreated": "string",
                      "result.rows": "string",
                      "result.propertiesSet": "string",
                      "result.labelsRemoved": "string",
                      "result.relationshipsDeleted": "string",
                      "result.constraintsAdded": "string",
                      "result.nodesDeleted": "string",
                      "result.indexesAdded": "string",
                      "result.labelsAdded": "string",
                      "result.relationshipsCreated": "string",
                      "result.time": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined",
        "tableHide": false,
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "row\tresult.constraintsRemoved\tresult.indexesRemoved\tresult.nodesCreated\tresult.rows\tresult.propertiesSet\tresult.labelsRemoved\tresult.relationshipsDeleted\tresult.constraintsAdded\tresult.nodesDeleted\tresult.indexesAdded\tresult.labelsAdded\tresult.relationshipsCreated\tresult.time\n-1\t0\t0\t1\t0\t1\t0\t0\t0\t0\t0\t1\t0\t0\n-1\t0\t0\t0\t0\t1\t0\t0\t0\t0\t0\t0\t0\t0\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635860142585_1100337140",
      "id": "paragraph_1635860142585_1100337140",
      "dateCreated": "2021-11-02 13:35:42.586",
      "dateStarted": "2021-11-18 10:42:07.157",
      "dateFinished": "2021-11-18 10:42:07.400",
      "status": "FINISHED"
    },
    {
      "title": "Check results",
      "text": "%neo4j\nMATCH (n:Node {id: 1}) RETURN n",
      "user": "anonymous",
      "dateUpdated": "2021-11-18 10:42:10.223",
      "config": {
        "colWidth": 6.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "id": "string",
                      "label": "string",
                      "import": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "NETWORK",
            "data": "{\"nodes\":[{\"id\":21407,\"data\":{\"import\":true,\"id\":1},\"label\":\"Node\"}],\"edges\":[],\"labels\":{\"Movie\":\"#4FF400\",\"Person\":\"#94ABF6\",\"NotKeanu\":\"#4F9641\",\"MyCaseNode\":\"#C9E51B\",\"NodePeriodic\":\"#97A58B\",\"End\":\"#1E8E19\",\"Start\":\"#7A9C1E\",\"Batch\":\"#01AE6A\",\"Alert\":\"#73B17A\",\"Node\":\"#FCC978\"},\"types\":[\"ACTED_IN\",\"REVIEWED\",\"HAS_MOVIE\",\"PRODUCED\",\"WROTE\",\"MY_PERIODIC_REL\",\"FOLLOWS\",\"DIRECTED\",\"MY_CASE_REL\"],\"directed\":true}"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635860300022_129065438",
      "id": "paragraph_1635860300022_129065438",
      "dateCreated": "2021-11-02 13:38:20.022",
      "dateStarted": "2021-11-18 10:42:10.241",
      "dateFinished": "2021-11-18 10:42:10.320",
      "status": "FINISHED"
    },
    {
      "title": "apoc.cypher.runSchemaFile",
      "text": "%neo4j\n\n// File content:\n// CREATE INDEX FOR (a:Actor) ON (a.name, a.born);\n// CREATE CONSTRAINT ON (movie:Movie) ASSERT movie.title IS UNIQUE\n\nCALL apoc.cypher.runSchemaFile(\"fileExampleSchema.cypher\");",
      "user": "anonymous",
      "dateUpdated": "2021-11-18 10:42:33.199",
      "config": {
        "colWidth": 6.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 238.011,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "row": "string",
                      "result.constraintsRemoved": "string",
                      "result.indexesRemoved": "string",
                      "result.nodesCreated": "string",
                      "result.rows": "string",
                      "result.propertiesSet": "string",
                      "result.labelsRemoved": "string",
                      "result.relationshipsDeleted": "string",
                      "result.constraintsAdded": "string",
                      "result.nodesDeleted": "string",
                      "result.indexesAdded": "string",
                      "result.labelsAdded": "string",
                      "result.relationshipsCreated": "string",
                      "result.time": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "row\tresult.constraintsRemoved\tresult.indexesRemoved\tresult.nodesCreated\tresult.rows\tresult.propertiesSet\tresult.labelsRemoved\tresult.relationshipsDeleted\tresult.constraintsAdded\tresult.nodesDeleted\tresult.indexesAdded\tresult.labelsAdded\tresult.relationshipsCreated\tresult.time\n-1\t0\t0\t0\t0\t0\t0\t0\t0\t0\t1\t0\t0\t0\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635862450813_1749992024",
      "id": "paragraph_1635862450813_1749992024",
      "dateCreated": "2021-11-02 14:14:10.814",
      "dateStarted": "2021-11-18 10:42:33.215",
      "dateFinished": "2021-11-18 10:42:33.365",
      "status": "FINISHED"
    },
    {
      "title": "Check results",
      "text": "%neo4j\ncall db.indexes",
      "user": "anonymous",
      "dateUpdated": "2021-11-18 10:42:40.473",
      "config": {
        "colWidth": 6.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 324.006,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "id": "string",
                      "name": "string",
                      "state": "string",
                      "populationPercent": "string",
                      "uniqueness": "string",
                      "type": "string",
                      "entityType": "string",
                      "labelsOrTypes": "string",
                      "properties": "string",
                      "provider": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "id\tname\tstate\tpopulationPercent\tuniqueness\ttype\tentityType\tlabelsOrTypes\tproperties\tprovider\n4\t\"constraint_person\"\t\"ONLINE\"\t100.0\t\"UNIQUE\"\t\"BTREE\"\t\"NODE\"\t[\"Person\"]\t[\"name\"]\t\"native-btree-1.0\"\n1\t\"index_343aff4e\"\t\"ONLINE\"\t100.0\t\"NONUNIQUE\"\t\"LOOKUP\"\t\"NODE\"\t[]\t[]\t\"token-lookup-1.0\"\n6\t\"index_d3911f47\"\t\"ONLINE\"\t100.0\t\"NONUNIQUE\"\t\"BTREE\"\t\"NODE\"\t[\"Actor\"]\t[\"name\",\"born\"]\t\"native-btree-1.0\"\n2\t\"index_f7700477\"\t\"ONLINE\"\t100.0\t\"NONUNIQUE\"\t\"LOOKUP\"\t\"RELATIONSHIP\"\t[]\t[]\t\"token-lookup-1.0\"\n3\t\"index_movie\"\t\"ONLINE\"\t100.0\t\"NONUNIQUE\"\t\"BTREE\"\t\"NODE\"\t[\"Movie\"]\t[\"title\"]\t\"native-btree-1.0\"\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635862549037_1694262330",
      "id": "paragraph_1635862549037_1694262330",
      "dateCreated": "2021-11-02 14:15:49.037",
      "dateStarted": "2021-11-18 10:42:40.489",
      "dateFinished": "2021-11-18 10:42:40.566",
      "status": "FINISHED"
    },
    {
      "title": "apoc.cypher.runTimeboxed",
      "text": "%neo4j\n\n// I create 20000 \u0027TimeoutTest\u0027 nodes\nUNWIND range(1, 20000) as idx CREATE (n:TimeoutTest {id: idx});\n\ncall apoc.cypher.runTimeboxed(\"match (n:TimeoutTest) RETURN n\", {}, 100) // I set a small timeout\nYIELD value\nRETURN count(value.n.id);\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-18 10:43:14.661",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 114.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "count(value.n.id)": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "count(value.n.id)\n1001\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635862617028_1273613672",
      "id": "paragraph_1635862617028_1273613672",
      "dateCreated": "2021-11-02 14:16:57.028",
      "dateStarted": "2021-11-18 10:43:14.679",
      "dateFinished": "2021-11-18 10:43:15.275",
      "status": "FINISHED"
    },
    {
      "text": "%neo4j\n\nTODO - QUERY IN PARALLELO\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-23 15:57:52.620",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1637683061681_364418257",
      "id": "paragraph_1637683061681_364418257",
      "dateCreated": "2021-11-23 15:57:41.681",
      "status": "READY"
    },
    {
      "text": "%md\n\n## Custom procedures and functions\n\n- `apoc.custom.declareProcedure(signature, cypher, mode, description)`\n- `apoc.custom.declareFunction(signature, cypher, forceSingle, description)`\n\n`signature` it similar to signature result from call dbms.procedures(), call dbms.functions(), except for optional `?`.\nSo it\u0027s nameProcedureOrFunction(param1 :: TYPE \u003d defaultValue1, param2 :: TYPE \u003d defaultValue2, ... ) :: (result1 :: TYPE, result2 :: TYPE, ...),\nwhere ` \u003d defaultValueN` is optional, and `TYPE` can be TODO....\nand nameFunction(param1 :: TYPE \u003d defaultValue1, param2 :: TYPE \u003d defaultValue2, ... ) :: TYPE,\n\n\u003cpre\u003e\nTODO - DIRE CHE PER FARLA FUNZIONARE COME SI DEVE, visto che c\u0027è un Cypher issue e in Neo4j non si pulisce bene la cache neanche con db.clearQueryCaches()\nSI CONSIGLIA `dbms.query_cache_size\u003d1` oppure non sovrascrivere con lo stesso nome\n\u003c/pre\u003e\n\nThe procedure/function will be saved with name `custom.NAME`\n\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-23 16:25:32.118",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": false,
        "tableHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eCustom procedures and functions\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eapoc.custom.declareProcedure(signature, cypher, $config)\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eapoc.custom.declareFunction(signature, cypher, $config)\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003ccode\u003esignature\u003c/code\u003e it similar to signature result from call dbms.procedures(), call dbms.functions(), except for optional \u003ccode\u003e?\u003c/code\u003e.\u003cbr /\u003e\nSo it\u0026rsquo;s nameProcedureOrFunction(param1 :: TYPE \u003d defaultValue1, param2 :: TYPE \u003d defaultValue2, \u0026hellip; ) :: (result1 :: TYPE, result2 :: TYPE, \u0026hellip;),\u003cbr /\u003e\nwhere \u003ccode\u003e\u003d defaultValueN\u003c/code\u003e is optional, and \u003ccode\u003eTYPE\u003c/code\u003e can be TODO\u0026hellip;.\u003cbr /\u003e\nand nameFunction(param1 :: TYPE \u003d defaultValue1, param2 :: TYPE \u003d defaultValue2, \u0026hellip; ) :: TYPE,\u003c/p\u003e\n\u003cpre\u003e\nTODO - DIRE CHE PER FARLA FUNZIONARE COME SI DEVE, visto che c\u0027è un Cypher issue e in Neo4j non si pulisce bene la cache neanche con db.clearQueryCaches()\nSI CONSIGLIA `dbms.query_cache_size\u003d1` oppure non sovrascrivere con lo stesso nome\n\u003c/pre\u003e\n\u003cp\u003eThe procedure/function will be saved with name \u003ccode\u003ecustom.NAME\u003c/code\u003e\u003c/p\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1637683072700_424785560",
      "id": "paragraph_1637683072700_424785560",
      "dateCreated": "2021-11-23 15:57:52.700",
      "dateStarted": "2021-11-23 16:21:13.943",
      "dateFinished": "2021-11-23 16:21:14.860",
      "status": "FINISHED"
    },
    {
      "text": "%neo4j\nCALL apoc.custom.declareProcedure(\n  \u0027ajeje(input::INT, power::INT) :: (answer::INT)\u0027,\n  \u0027UNWIND range(0, $power) AS power\n   RETURN $input ^ power AS answer\u0027\n);",
      "user": "anonymous",
      "dateUpdated": "2021-11-23 16:22:19.476",
      "config": {
        "colWidth": 6.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1637684276341_1049085164",
      "id": "paragraph_1637684276341_1049085164",
      "dateCreated": "2021-11-23 16:17:56.341",
      "dateStarted": "2021-11-23 16:22:19.490",
      "dateFinished": "2021-11-23 16:22:19.573",
      "status": "FINISHED"
    },
    {
      "text": "%neo4j\n\nCALL custom.ajeje(4,3);\n\n\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-23 16:22:29.185",
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 6.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "editorHide": false,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 194.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "answer": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "answer\n1.0\n4.0\n16.0\n64.0\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1637684292414_1908513508",
      "id": "paragraph_1637684292414_1908513508",
      "dateCreated": "2021-11-23 16:18:12.414",
      "dateStarted": "2021-11-23 16:22:22.363",
      "dateFinished": "2021-11-23 16:22:22.450",
      "status": "FINISHED"
    },
    {
      "text": "%neo4j\n\nCALL apoc.custom.declareFunction(\n  \u0027brazorf(input::INT) :: INT\u0027,\n  \u0027RETURN $input*2 as answer\u0027\n);",
      "user": "anonymous",
      "dateUpdated": "2021-11-23 16:22:37.267",
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 6.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "editorHide": false,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1637684348807_692323716",
      "id": "paragraph_1637684348807_692323716",
      "dateCreated": "2021-11-23 16:19:08.807",
      "dateStarted": "2021-11-23 16:22:37.285",
      "dateFinished": "2021-11-23 16:22:37.359",
      "status": "FINISHED"
    },
    {
      "text": "%neo4j\n\nRETURN custom.brazorf(83) AS value;",
      "user": "anonymous",
      "dateUpdated": "2021-11-23 16:22:46.431",
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 6.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "editorHide": false,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 84.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "value": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "value\n166\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1637684349522_1980156289",
      "id": "paragraph_1637684349522_1980156289",
      "dateCreated": "2021-11-23 16:19:09.523",
      "dateStarted": "2021-11-23 16:22:42.156",
      "dateFinished": "2021-11-23 16:22:42.228",
      "status": "FINISHED"
    },
    {
      "text": "%neo4j\n\nCALL apoc.custom.declareFunction(\n  \u0027brazorf(input::INT) :: INT\u0027,\n  \u0027RETURN $input*2 as answer\u0027, true\n);",
      "user": "anonymous",
      "dateUpdated": "2021-11-23 16:29:30.026",
      "config": {
        "colWidth": 6.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1637684799522_1170959114",
      "id": "paragraph_1637684799522_1170959114",
      "dateCreated": "2021-11-23 16:26:39.522",
      "status": "READY"
    },
    {
      "text": "%neo4j\n\nCALL apoc.custom.declareFunction(\n  \u0027brazorf(input::INT) :: INT\u0027,\n  \u0027RETURN $input*2 as answer\u0027\n);",
      "user": "anonymous",
      "dateUpdated": "2021-11-23 16:26:51.489",
      "config": {
        "colWidth": 6.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined",
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1637684811476_1296272259",
      "id": "paragraph_1637684811476_1296272259",
      "dateCreated": "2021-11-23 16:26:51.476",
      "status": "READY"
    },
    {
      "text": "%neo4j\n//CREATE (n:Nodone {a: 1});\nCREATE (n:Nodino {a: 1});\nCREATE (n:Nodino {a: 1});",
      "user": "anonymous",
      "dateUpdated": "2021-11-23 16:57:56.176",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1637685922923_1696742049",
      "id": "paragraph_1637685922923_1696742049",
      "dateCreated": "2021-11-23 16:45:22.923",
      "dateStarted": "2021-11-23 16:57:56.191",
      "dateFinished": "2021-11-23 16:57:56.317",
      "status": "FINISHED"
    },
    {
      "text": "%neo4j\n\n\nCALL apoc.custom.declareFunction(\n  \u0027eeeeeeeqqqq(input::ANY) :: LIST OF INT\u0027,\n  \u0027MATCH (n:Nodone) RETURN collect(n.a)\u0027, \n  true\n);",
      "user": "anonymous",
      "dateUpdated": "2021-11-23 16:57:10.711",
      "config": {
        "colWidth": 6.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1637685408313_226305696",
      "id": "paragraph_1637685408313_226305696",
      "dateCreated": "2021-11-23 16:36:48.314",
      "dateStarted": "2021-11-23 16:57:10.723",
      "dateFinished": "2021-11-23 16:57:10.762",
      "status": "FINISHED"
    },
    {
      "text": "%neo4j\n\n\nCALL apoc.custom.declareFunction(\n  \u0027ryryryr(input::ANY) :: LIST OF INT\u0027,\n  \u0027MATCH (n:Nodone) RETURN collect(n.a)\u0027, \n  false\n);",
      "user": "anonymous",
      "dateUpdated": "2021-11-23 16:55:42.523",
      "config": {
        "colWidth": 6.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined",
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1637686437571_1246927786",
      "id": "paragraph_1637686437571_1246927786",
      "dateCreated": "2021-11-23 16:53:57.571",
      "dateStarted": "2021-11-23 16:55:42.537",
      "dateFinished": "2021-11-23 16:55:42.576",
      "status": "FINISHED"
    },
    {
      "text": "%neo4j\n\nCALL apoc.custom.declareFunction(\n  \u0027ahnonso1() :: LIST OF MAP\u0027,\n  \u0027RETURN {a: 1, b:2}\u0027, \n  true\n);",
      "user": "anonymous",
      "dateUpdated": "2021-11-24 09:09:33.239",
      "config": {
        "colWidth": 6.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined",
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1637685427853_380205517",
      "id": "paragraph_1637685427853_380205517",
      "dateCreated": "2021-11-23 16:37:07.853",
      "dateStarted": "2021-11-24 09:09:33.254",
      "dateFinished": "2021-11-24 09:09:33.311",
      "status": "FINISHED"
    },
    {
      "text": "%neo4j\n\nCALL apoc.custom.declareFunction(\n  \u0027nonsaprei1() :: LIST OF MAP\u0027,\n  \u0027RETURN {a: 1, b:2}\u0027, \n  false\n);",
      "user": "anonymous",
      "dateUpdated": "2021-11-24 09:09:16.881",
      "config": {
        "colWidth": 6.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined",
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1637686772680_1760493530",
      "id": "paragraph_1637686772680_1760493530",
      "dateCreated": "2021-11-23 16:59:32.680",
      "dateStarted": "2021-11-24 09:09:16.900",
      "dateFinished": "2021-11-24 09:09:16.937",
      "status": "FINISHED"
    },
    {
      "text": "%neo4j\n// TODO ????????\nRETURN custom.ahnonso1()",
      "user": "anonymous",
      "dateUpdated": "2021-11-24 09:09:36.351",
      "config": {
        "colWidth": 6.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 90.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "custom.ahnonso1().a": "string",
                      "custom.ahnonso1().b": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined",
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "custom.ahnonso1().a\tcustom.ahnonso1().b\n1\t2\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1637685433590_1312379145",
      "id": "paragraph_1637685433590_1312379145",
      "dateCreated": "2021-11-23 16:37:13.590",
      "dateStarted": "2021-11-24 09:09:36.079",
      "dateFinished": "2021-11-24 09:09:36.126",
      "status": "FINISHED"
    },
    {
      "text": "%neo4j\n\nRETURN custom.nonsaprei1()",
      "user": "anonymous",
      "dateUpdated": "2021-11-24 09:09:21.648",
      "config": {
        "colWidth": 6.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 90.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "custom.nonsaprei1()": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined",
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "custom.nonsaprei1()\n[{\"{a: 1, b:2}\":{\"a\":1,\"b\":2}}]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1637685598192_390040203",
      "id": "paragraph_1637685598192_390040203",
      "dateCreated": "2021-11-23 16:39:58.192",
      "dateStarted": "2021-11-24 09:09:21.347",
      "dateFinished": "2021-11-24 09:09:21.434",
      "status": "FINISHED"
    },
    {
      "text": "%neo4j\n\nRETURN custom.hgjeksilqlai(null)",
      "user": "anonymous",
      "dateUpdated": "2021-11-23 16:58:50.412",
      "config": {
        "colWidth": 6.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 90.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "custom.hgjeksilqlai(null)": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined",
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "custom.hgjeksilqlai(null)\n[1,1]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1637686692100_884621807",
      "id": "paragraph_1637686692100_884621807",
      "dateCreated": "2021-11-23 16:58:12.100",
      "dateStarted": "2021-11-23 16:58:50.106",
      "dateFinished": "2021-11-23 16:58:50.118",
      "status": "FINISHED"
    },
    {
      "text": "%neo4j\n\nRETURN custom.qweqwe(null)",
      "user": "anonymous",
      "dateUpdated": "2021-11-23 16:51:51.871",
      "config": {
        "colWidth": 6.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 88.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "custom.qweqwe(null)": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined",
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "custom.qweqwe(null)\n[1]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1637685420734_1956644851",
      "id": "paragraph_1637685420734_1956644851",
      "dateCreated": "2021-11-23 16:37:00.734",
      "dateStarted": "2021-11-23 16:51:51.623",
      "dateFinished": "2021-11-23 16:51:51.645",
      "status": "FINISHED"
    },
    {
      "text": "%neo4j\nCALL apoc.custom.declareFunction(\n\u0027dieci3(par :: ANY) :: ANY\u0027,   // quando c\u0027è ANY wrappa il risultato in lista di map\n\u0027RETURN $par\u0027, \nfalse\n); —\u003e return custom.dieci3(1)",
      "user": "anonymous",
      "dateUpdated": "2021-11-26 16:15:38.244",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1637943324320_1138006200",
      "id": "paragraph_1637943324320_1138006200",
      "dateCreated": "2021-11-26 16:15:24.320",
      "status": "READY"
    },
    {
      "text": "%neo4j\nCALL apoc.custom.declareFunction(\n\u0027cinquanta2(par :: ANY) :: LIST OF ANY\u0027,\n\u0027RETURN $par\u0027, \nfalse\n)\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-26 16:15:51.004",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1637943338351_2054991572",
      "id": "paragraph_1637943338351_2054991572",
      "dateCreated": "2021-11-26 16:15:38.351",
      "status": "READY"
    },
    {
      "text": "%neo4j\n\n// apoc.cypher.mapParallel is similar to apoc.cypher.mapParallel2 but less customizable and stable\n\nMATCH (p:Person) WITH collect(p) as pages\nCALL apoc.cypher.mapParallel2(\"MATCH (_)-[]-\u003e(p:Movie) RETURN collect(p.title + $t) as title\", {t: \" - ok\"}, pages, \n10,  // with 0 --\u003e calculate the number of partition retrieving the num. of procs available from JVM through the java.lang.Runtime.availableProcessors()\n10) yield value\nRETURN value.title",
      "user": "anonymous",
      "dateUpdated": "2021-11-26 17:17:27.803",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1637943356575_454165804",
      "id": "paragraph_1637943356575_454165804",
      "dateCreated": "2021-11-26 16:15:56.575",
      "status": "READY"
    },
    {
      "text": "%neo4j\n\n// there is also apoc.cypher.parallel, less customizable and stable\n\nMATCH (p:Person) WITH collect(p) as pages\nCALL apoc.cypher.parallel2(\"MATCH (a)-[]-\u003e(p:Movie) RETURN collect(p.title + $t) as title\", {a: pages, t: \" - ok\"}, \"a\") yield value\nRETURN value.title",
      "user": "anonymous",
      "dateUpdated": "2021-11-26 17:16:50.580",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "value.title": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "value.title\n[\"Something\u0027s Gotta Give - ok\",\"The Replacements - ok\",\"Johnny Mnemonic - ok\",\"The Devil\u0027s Advocate - ok\",\"The Matrix Revolutions - ok\",\"The Matrix Reloaded - ok\",\"The Matrix - ok\"]\n[\"The Matrix Revolutions - ok\",\"The Matrix Reloaded - ok\",\"The Matrix - ok\"]\n[\"The Matrix Revolutions - ok\",\"The Matrix Reloaded - ok\",\"The Matrix - ok\"]\n[\"Cloud Atlas - ok\",\"V for Vendetta - ok\",\"The Matrix Revolutions - ok\",\"The Matrix Reloaded - ok\",\"The Matrix - ok\"]\n[\"Speed Racer - ok\",\"V for Vendetta - ok\",\"Speed Racer - ok\",\"V for Vendetta - ok\",\"Ninja Assassin - ok\",\"Cloud Atlas - ok\",\"The Matrix Revolutions - ok\",\"The Matrix Reloaded - ok\",\"The Matrix - ok\"]\n[\"Speed Racer - ok\",\"V for Vendetta - ok\",\"V for Vendetta - ok\",\"Speed Racer - ok\",\"Cloud Atlas - ok\",\"Ninja Assassin - ok\",\"The Matrix Revolutions - ok\",\"The Matrix Reloaded - ok\",\"The Matrix - ok\"]\n[\"Speed Racer - ok\",\"V for Vendetta - ok\",\"Ninja Assassin - ok\",\"The Matrix Revolutions - ok\",\"The Matrix Reloaded - ok\",\"The Matrix - ok\"]\n[\"The Matrix - ok\"]\n[\"That Thing You Do - ok\",\"The Devil\u0027s Advocate - ok\"]\n[\"The Devil\u0027s Advocate - ok\"]\n[\"The Devil\u0027s Advocate - ok\"]\n[\"Jerry Maguire - ok\",\"Top Gun - ok\",\"A Few Good Men - ok\"]\n[\"As Good as It Gets - ok\",\"One Flew Over the Cuckoo\u0027s Nest - ok\",\"Something\u0027s Gotta Give - ok\",\"Hoffa - ok\",\"A Few Good Men - ok\"]\n[\"A Few Good Men - ok\"]\n[\"Apollo 13 - ok\",\"Frost/Nixon - ok\",\"A Few Good Men - ok\"]\n[\"Stand By Me - ok\",\"A Few Good Men - ok\"]\n[\"A Few Good Men - ok\"]\n[\"What Dreams May Come - ok\",\"Jerry Maguire - ok\",\"As Good as It Gets - ok\",\"A Few Good Men - ok\"]\n[\"A Few Good Men - ok\"]\n[\"Hoffa - ok\",\"A Few Good Men - ok\"]\n[\"A Few Good Men - ok\",\"Ninja Assassin - ok\",\"V for Vendetta - ok\"]\n[\"A Few Good Men - ok\"]\n[\"Stand By Me - ok\",\"When Harry Met Sally - ok\",\"When Harry Met Sally - ok\",\"A Few Good Men - ok\"]\n[\"A Few Good Men - ok\",\"A Few Good Men - ok\"]\n[\"Top Gun - ok\"]\n[\"Top Gun - ok\"]\n[\"Top Gun - ok\"]\n[\"Top Gun - ok\"]\n[\"Sleepless in Seattle - ok\",\"You\u0027ve Got Mail - ok\",\"Top Gun - ok\",\"When Harry Met Sally - ok\",\"Joe Versus the Volcano - ok\"]\n[\"Top Gun - ok\"]\n[\"Top Gun - ok\"]\n[\"Jerry Maguire - ok\"]\n[\"Jerry Maguire - ok\"]\n[\"Jerry Maguire - ok\",\"Stand By Me - ok\"]\n[\"Jerry Maguire - ok\"]\n[\"The Green Mile - ok\",\"Jerry Maguire - ok\"]\n[\"Jerry Maguire - ok\"]\n[\"Jerry Maguire - ok\"]\n[\"Jerry Maguire - ok\",\"Jerry Maguire - ok\",\"Jerry Maguire - ok\"]\n[\"Stand By Me - ok\"]\n[\"Stand By Me - ok\"]\n[\"Stand By Me - ok\"]\n[\"Stand By Me - ok\"]\n[\"Stand By Me - ok\",\"RescueDawn - ok\"]\n[\"As Good as It Gets - ok\",\"Cast Away - ok\",\"Twister - ok\"]\n[\"You\u0027ve Got Mail - ok\",\"As Good as It Gets - ok\"]\n[\"As Good as It Gets - ok\"]\n[\"What Dreams May Come - ok\"]\n[\"What Dreams May Come - ok\",\"Snow Falling on Cedars - ok\"]\n[\"RescueDawn - ok\",\"What Dreams May Come - ok\"]\n[\"What Dreams May Come - ok\",\"Bicentennial Man - ok\",\"The Birdcage - ok\"]\n[\"What Dreams May Come - ok\"]\n[\"Snow Falling on Cedars - ok\"]\n[\"Ninja Assassin - ok\",\"Snow Falling on Cedars - ok\"]\n[\"The Green Mile - ok\",\"Snow Falling on Cedars - ok\"]\n[\"Snow Falling on Cedars - ok\"]\n[\"You\u0027ve Got Mail - ok\"]\n[\"You\u0027ve Got Mail - ok\"]\n[\"RescueDawn - ok\",\"You\u0027ve Got Mail - ok\"]\n[\"Apollo 13 - ok\",\"You\u0027ve Got Mail - ok\",\"A League of Their Own - ok\",\"Joe Versus the Volcano - ok\",\"That Thing You Do - ok\",\"The Da Vinci Code - ok\",\"Cloud Atlas - ok\",\"Cast Away - ok\",\"The Green Mile - ok\",\"Sleepless in Seattle - ok\",\"The Polar Express - ok\",\"Charlie Wilson\u0027s War - ok\",\"That Thing You Do - ok\"]\n[\"You\u0027ve Got Mail - ok\",\"When Harry Met Sally - ok\",\"Sleepless in Seattle - ok\",\"When Harry Met Sally - ok\"]\n[\"Sleepless in Seattle - ok\"]\n[\"Sleepless in Seattle - ok\"]\n[\"Sleepless in Seattle - ok\"]\n[\"A League of Their Own - ok\",\"Sleepless in Seattle - ok\"]\n[\"Joe Versus the Volcano - ok\"]\n[\"Joe Versus the Volcano - ok\",\"The Birdcage - ok\"]\n[\"When Harry Met Sally - ok\"]\n[\"When Harry Met Sally - ok\"]\n[\"When Harry Met Sally - ok\"]\n[\"That Thing You Do - ok\"]\n[\"The Replacements - ok\"]\n[\"Unforgiven - ok\",\"The Birdcage - ok\",\"The Replacements - ok\"]\n[\"The Replacements - ok\"]\n[\"The Replacements - ok\"]\n[\"RescueDawn - ok\"]\n[\"RescueDawn - ok\",\"Twister - ok\"]\n[\"The Birdcage - ok\",\"Charlie Wilson\u0027s War - ok\"]\n[\"Unforgiven - ok\"]\n[\"Unforgiven - ok\",\"Unforgiven - ok\"]\n[\"Johnny Mnemonic - ok\"]\n[\"Johnny Mnemonic - ok\"]\n[\"Johnny Mnemonic - ok\"]\n[\"Johnny Mnemonic - ok\"]\n[\"Cloud Atlas - ok\"]\n[\"Cloud Atlas - ok\"]\n[\"Cloud Atlas - ok\"]\n[\"Cloud Atlas - ok\"]\n[\"Cloud Atlas - ok\"]\n[\"The Da Vinci Code - ok\"]\n[\"The Da Vinci Code - ok\"]\n[\"The Da Vinci Code - ok\"]\n[\"Apollo 13 - ok\",\"Frost/Nixon - ok\",\"The Da Vinci Code - ok\"]\n[\"V for Vendetta - ok\"]\n[\"V for Vendetta - ok\"]\n[\"V for Vendetta - ok\"]\n[\"Speed Racer - ok\",\"Ninja Assassin - ok\",\"V for Vendetta - ok\"]\n[\"Speed Racer - ok\"]\n[\"Speed Racer - ok\"]\n[\"Speed Racer - ok\"]\n[\"Speed Racer - ok\"]\n[\"Speed Racer - ok\"]\n[\"Speed Racer - ok\",\"Ninja Assassin - ok\"]\n[\"Ninja Assassin - ok\"]\n[\"The Green Mile - ok\"]\n[\"The Green Mile - ok\"]\n[\"The Green Mile - ok\",\"Frost/Nixon - ok\"]\n[\"Apollo 13 - ok\",\"The Green Mile - ok\"]\n[\"The Green Mile - ok\"]\n[\"The Green Mile - ok\"]\n[\"Frost/Nixon - ok\"]\n[\"Frost/Nixon - ok\"]\n[\"Frost/Nixon - ok\",\"Bicentennial Man - ok\"]\n[\"Hoffa - ok\",\"Hoffa - ok\",\"One Flew Over the Cuckoo\u0027s Nest - ok\"]\n[\"Hoffa - ok\"]\n[\"Apollo 13 - ok\"]\n[\"Twister - ok\",\"A League of Their Own - ok\",\"Apollo 13 - ok\"]\n[\"Twister - ok\",\"Charlie Wilson\u0027s War - ok\"]\n[\"Twister - ok\"]\n[\"Cast Away - ok\",\"The Polar Express - ok\"]\n[\"One Flew Over the Cuckoo\u0027s Nest - ok\"]\n[\"Something\u0027s Gotta Give - ok\"]\n[\"Something\u0027s Gotta Give - ok\",\"Something\u0027s Gotta Give - ok\",\"Something\u0027s Gotta Give - ok\"]\n[\"Bicentennial Man - ok\"]\n[\"Charlie Wilson\u0027s War - ok\"]\n[\"A League of Their Own - ok\"]\n[\"A League of Their Own - ok\"]\n[\"A League of Their Own - ok\"]\n[\"A League of Their Own - ok\"]\n[]\n[\"The Replacements - ok\"]\n[\"The Da Vinci Code - ok\",\"The Replacements - ok\",\"Jerry Maguire - ok\",\"Cloud Atlas - ok\",\"The Birdcage - ok\",\"Unforgiven - ok\"]\n[\"The Replacements - ok\",\"The Da Vinci Code - ok\"]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1637946563275_1855470014",
      "id": "paragraph_1637946563275_1855470014",
      "dateCreated": "2021-11-26 17:09:23.289",
      "dateStarted": "2021-11-26 17:09:26.471",
      "dateFinished": "2021-11-26 17:09:26.844",
      "status": "FINISHED"
    },
    {
      "text": "%md\n- `apoc.custom.removeFunction(name)`\n- `apoc.custom.removeProcedure(name)`",
      "user": "anonymous",
      "dateUpdated": "2021-11-24 09:45:34.469",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1637747069114_1899531384",
      "id": "paragraph_1637747069114_1899531384",
      "dateCreated": "2021-11-24 09:44:29.118",
      "status": "READY"
    },
    {
      "text": "%neo4j\nCALL apoc.custom.list\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-24 09:46:14.711",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "type": "string",
                      "name": "string",
                      "description": "string",
                      "mode": "string",
                      "statement": "string",
                      "inputs": "string",
                      "outputs": "string",
                      "forceSingle": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "type\tname\tdescription\tmode\tstatement\tinputs\toutputs\tforceSingle\n\"procedure\"\t\"powers\"\t\"\"\t\"read\"\t\"UNWIND range(0, $power) AS power\n   RETURN $input ^ power AS answer\"\t[[\"input\",\"integer\"],[\"power\",\"integer\"]]\t[[\"answer\",\"integer\"]]\tNULL\n\"procedure\"\t\"ajeje\"\t\"\"\t\"read\"\t\"UNWIND range(0, $power) AS power\n   RETURN $input ^ power AS answer\"\t[[\"input\",\"integer\"],[\"power\",\"integer\"]]\t[[\"answer\",\"integer\"]]\tNULL\n\"function\"\t\"brazorf\"\t\"\"\tNULL\t\"RETURN $input*2 as answer\"\t[[\"input\",\"integer\"]]\t\"integer\"\tFALSE\n\"function\"\t\"aaa\"\t\"\"\tNULL\t\"RETURN $input\"\t[[\"input\",\"any\"]]\t\"any\"\tTRUE\n\"function\"\t\"bbb\"\t\"\"\tNULL\t\"RETURN $input\"\t[[\"input\",\"any\"]]\t\"any\"\tFALSE\n\"function\"\t\"ccc\"\t\"\"\tNULL\t\"RETURN $input as input\"\t[[\"input\",\"any\"]]\t\"any\"\tFALSE\n\"function\"\t\"ddd\"\t\"\"\tNULL\t\"RETURN $input as input\"\t[[\"input\",\"any\"]]\t\"any\"\tTRUE\n\"function\"\t\"eee\"\t\"\"\tNULL\t\"MATCH (n:Nodino) RETURN n.a\"\t[]\t\"integer\"\tFALSE\n\"function\"\t\"franco\"\t\"\"\tNULL\t\"RETURN $input as input\"\t[[\"input\",\"integer\"]]\t\"list? of integer\"\tFALSE\n\"function\"\t\"ugo\"\t\"\"\tNULL\t\"RETURN $input as input\"\t[[\"input\",\"integer\"]]\t\"list? of integer\"\tTRUE\n\"function\"\t\"lino\"\t\"\"\tNULL\t\"RETURN $input as input\"\t[[\"input\",\"integer\"]]\t\"list? of integer\"\tTRUE\n\"function\"\t\"banfi\"\t\"\"\tNULL\t\"RETURN $input as input\"\t[[\"input\",\"integer\"]]\t\"list? of integer\"\tFALSE\n\"function\"\t\"banfi1\"\t\"\"\tNULL\t\"RETURN $input as input\"\t[[\"input\",\"any\"]]\t\"list? of any\"\tFALSE\n\"function\"\t\"lino1\"\t\"\"\tNULL\t\"RETURN $input as input\"\t[[\"input\",\"any\"]]\t\"list? of any\"\tTRUE\n\"function\"\t\"lino12\"\t\"\"\tNULL\t\"RETURN $input as input\"\t[[\"input\",\"map\"]]\t\"list? of any\"\tTRUE\n\"function\"\t\"lino123\"\t\"\"\tNULL\t\"RETURN $input as input\"\t[]\t\"list? of any\"\tTRUE\n\"function\"\t\"hhhh\"\t\"\"\tNULL\t\"RETURN $input as input\"\t[[\"input\",\"any\"]]\t\"list? of any\"\tFALSE\n\"function\"\t\"qqq\"\t\"\"\tNULL\t\"RETURN $input as input\"\t[[\"input\",\"any\"]]\t\"list? of any\"\tTRUE\n\"function\"\t\"asdasd\"\t\"\"\tNULL\t\"MATCH (n:Nodone) WITH n LIMIT 1 RETURN n.a\"\t[[\"input\",\"any\"]]\t\"list? of integer\"\tTRUE\n\"function\"\t\"qweqwe\"\t\"\"\tNULL\t\"MATCH (n:Nodone) WITH n LIMIT 1 RETURN n.a\"\t[[\"input\",\"any\"]]\t\"list? of integer\"\tTRUE\n\"function\"\t\"ggggffff\"\t\"\"\tNULL\t\"MATCH (n:Nodone) WITH n LIMIT 1 RETURN n.a\"\t[[\"input\",\"any\"]]\t\"list? of integer\"\tFALSE\n\"function\"\t\"hhh\"\t\"\"\tNULL\t\"MATCH (n:Nodone) RETURN collect(n.a)\"\t[[\"input\",\"any\"]]\t\"list? of integer\"\tFALSE\n\"function\"\t\"ryryryr\"\t\"\"\tNULL\t\"MATCH (n:Nodone) RETURN collect(n.a)\"\t[[\"input\",\"any\"]]\t\"list? of integer\"\tFALSE\n\"function\"\t\"hfhfw\"\t\"\"\tNULL\t\"MATCH (n:Nodone) RETURN collect(n.a)\"\t[[\"input\",\"any\"]]\t\"list? of integer\"\tFALSE\n\"function\"\t\"ghigkfh\"\t\"\"\tNULL\t\"MATCH (n:Nodone) RETURN collect(n.a)\"\t[[\"input\",\"any\"]]\t\"list? of integer\"\tTRUE\n\"function\"\t\"eeeeeeeqqqq\"\t\"\"\tNULL\t\"MATCH (n:Nodone) RETURN collect(n.a)\"\t[[\"input\",\"any\"]]\t\"list? of integer\"\tTRUE\n\"function\"\t\"hgjeksilqlai\"\t\"\"\tNULL\t\"MATCH (n:Nodino) RETURN collect(n.a)\"\t[[\"input\",\"any\"]]\t\"list? of integer\"\tTRUE\n\"function\"\t\"rreeeeeeeeee\"\t\"\"\tNULL\t\"MATCH (n:Nodino) RETURN collect(n.a)\"\t[[\"input\",\"any\"]]\t\"list? of integer\"\tTRUE\n\"function\"\t\"ghghgghghhgghgh\"\t\"\"\tNULL\t\"MATCH (n:Nodino) RETURN collect(n.a)\"\t[[\"input\",\"any\"]]\t\"list? of integer\"\tFALSE\n\"function\"\t\"fjfjfjf\"\t\"\"\tNULL\t\"MATCH (n:Nodino) RETURN collect(n.a)\"\t[]\t\"any\"\tFALSE\n\"function\"\t\"gjgjgjggq\"\t\"\"\tNULL\t\"MATCH (n:Nodino) RETURN n.a\"\t[]\t\"integer\"\tFALSE\n\"function\"\t\"qqqgggdddd\"\t\"\"\tNULL\t\"MATCH (n:Nodino) RETURN collect(n.a)\"\t[]\t\"integer\"\tFALSE\n\"function\"\t\"ffffffeeeeee\"\t\"\"\tNULL\t\"MATCH (n:Nodino) RETURN collect(n.a)\"\t[]\t\"integer\"\tTRUE\n\"function\"\t\"provona\"\t\"\"\tNULL\t\"RETURN [1,2,3,4]\"\t[]\t\"list? of map\"\tFALSE\n\"function\"\t\"provona1\"\t\"\"\tNULL\t\"RETURN [1,2,3,4]\"\t[]\t\"list? of map\"\tTRUE\n\"function\"\t\"nonsaprei\"\t\"\"\tNULL\t\"RETURN [1,2,3,4]\"\t[]\t\"list? of map\"\tFALSE\n\"function\"\t\"ahnonso\"\t\"\"\tNULL\t\"RETURN [1,2,3,4]\"\t[]\t\"list? of map\"\tTRUE\n\"function\"\t\"nonsaprei1\"\t\"\"\tNULL\t\"RETURN {a: 1, b:2}\"\t[]\t\"list? of map\"\tFALSE\n\"function\"\t\"ahnonso1\"\t\"\"\tNULL\t\"RETURN {a: 1, b:2}\"\t[]\t\"list? of map\"\tTRUE\n\"function\"\t\"ahnonso2\"\t\"\"\tNULL\t\"RETURN {a: 1, b:2}\"\t[]\t\"any\"\tTRUE\n\"function\"\t\"ahnonso23\"\t\"\"\tNULL\t\"RETURN {a: 1, b:2}\"\t[]\t\"any\"\tFALSE\n\"function\"\t\"ahnonso234\"\t\"\"\tNULL\t\"RETURN {a: 1, b:2}\"\t[]\t\"list? of any\"\tFALSE\n\"function\"\t\"ahnonso2345\"\t\"\"\tNULL\t\"RETURN {}\"\t[]\t\"list? of any\"\tFALSE\n\"function\"\t\"mille\"\t\"\"\tNULL\t\"RETURN $par\"\t[[\"par\",\"any\"]]\t\"list? of any\"\tFALSE\n\"function\"\t\"cento\"\t\"\"\tNULL\t\"RETURN $par\"\t[[\"par\",\"any\"]]\t\"list? of any\"\tTRUE\n\"function\"\t\"venti\"\t\"\"\tNULL\t\"RETURN $par\"\t[[\"par\",\"map\"]]\t\"list? of map\"\tTRUE\n\"function\"\t\"trenta\"\t\"\"\tNULL\t\"RETURN $par\"\t[[\"par\",\"map\"]]\t\"map\"\tFALSE\n\"function\"\t\"quaranta\"\t\"\"\tNULL\t\"RETURN $par\"\t[[\"par\",\"map\"]]\t\"map\"\tFALSE\n\"function\"\t\"cinquanta\"\t\"\"\tNULL\t\"RETURN $par\"\t[[\"par\",\"map\"]]\t\"list? of map\"\tTRUE\n\"function\"\t\"cinquanta1\"\t\"\"\tNULL\t\"RETURN $par\"\t[[\"par\",\"any\"]]\t\"list? of map\"\tTRUE\n\"function\"\t\"cinquanta2\"\t\"\"\tNULL\t\"RETURN $par\"\t[[\"par\",\"any\"]]\t\"list? of any\"\tTRUE\n\"function\"\t\"dieci2\"\t\"\"\tNULL\t\"RETURN $par\"\t[[\"par\",\"any\"]]\t\"any\"\tTRUE\n\"function\"\t\"dieci3\"\t\"\"\tNULL\t\"RETURN $par\"\t[[\"par\",\"any\"]]\t\"any\"\tFALSE\n\"function\"\t\"dieci33\"\t\"\"\tNULL\t\"RETURN $par\"\t[[\"par\",\"integer\"]]\t\"any\"\tFALSE\n\"function\"\t\"cinquanta5\"\t\"\"\tNULL\t\"RETURN $par\"\t[[\"par\",\"any\"]]\t\"list? of any\"\tTRUE\n\"function\"\t\"cinquanta6\"\t\"\"\tNULL\t\"RETURN $par\"\t[[\"par\",\"any\"]]\t\"any\"\tTRUE\n\"function\"\t\"cinquanta7\"\t\"\"\tNULL\t\"RETURN 1\"\t[[\"par\",\"any\"]]\t\"any\"\tTRUE\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1637747142953_10096929",
      "id": "paragraph_1637747142953_10096929",
      "dateCreated": "2021-11-24 09:45:42.953",
      "dateStarted": "2021-11-24 09:46:14.397",
      "dateFinished": "2021-11-24 09:46:14.442",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\n## [Import - Export](http://localhost:8080/#/notebook/2GJCSVRMK)",
      "user": "anonymous",
      "dateUpdated": "2021-11-17 21:23:59.771",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003e\u003ca href\u003d\"http://localhost:8080/#/notebook/2GJCSVRMK\"\u003eImport - Export\u003c/a\u003e\u003c/h2\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1635863303356_2095614526",
      "id": "paragraph_1635863303356_2095614526",
      "dateCreated": "2021-11-02 14:28:23.356",
      "dateStarted": "2021-11-17 21:23:59.773",
      "dateFinished": "2021-11-17 21:23:59.832",
      "status": "FINISHED"
    },
    {
      "text": "%neo4j\n",
      "user": "anonymous",
      "dateUpdated": "2021-11-07 15:08:43.807",
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1636297723807_660054266",
      "id": "paragraph_1636297723807_660054266",
      "dateCreated": "2021-11-07 15:08:43.807",
      "status": "READY"
    }
  ],
  "name": "3. Cypher executions",
  "id": "2GMKN71T8",
  "defaultInterpreterGroup": "spark",
  "version": "0.9.0-preview2",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {},
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {}
}